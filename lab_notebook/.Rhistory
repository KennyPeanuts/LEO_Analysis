year <- 1:12
s1 <- c(3, 6, 2, 10, 12, 8, 28, 100, 345, 450, 489, 501)
l1 <- c(9, 15, 35, 55, 103, 177, 250, 278, 103, 43, 9, 0)
plot(s1 ~ year)
points(l1 ~ year, pch = 19)
points(l1 ~ year, pch = 19, type = "b")
plot(s1 ~ year, type = "b")
points(l1 ~ year, pch = 19, type = "b")
s2 <- c(2, 3, 1, 10, 22, 67, 100, 103, 149, 146, 144, 142)
l2 <- c(8, 15, 30, 43, 61, 46, 36, 43, 0, 7, 3, 9)
plot(s2 ~ year, type = "b")
points(l2 ~ year, pch = 19, type = "b")
s1 <- c(2, 3, 1, 10, 22, 67, 100, 103, 149, 146, 144, 142)
l1 <- c(8, 15, 30, 43, 61, 46, 36, 43, 0, 7, 3, 9)
plot(s1 ~ year, type = "b")
points(l1 ~ year, pch = 19, type = "b")
legend(2, 150, c("Small Fruit", "Large Fruit"), pch = c(1, 19))
s2 <- c(16, 20, 18, 29, 30, 31, 34, 36, 30, 41, 38, 37)
l1 <- c(0, 2, 7, 0, 3, 0, 0, 1, 9, 0, 4, 2)
plot(s2 ~ year, type = "b", main = "Population 2")
points(l2 ~ year, pch = 19, type = "b")
s2 <- c(16, 20, 18, 29, 30, 31, 34, 36, 30, 41, 38, 37)
s1 <- c(2, 3, 1, 10, 22, 67, 100, 103, 149, 146, 144, 142)
l1 <- c(8, 15, 30, 43, 61, 46, 36, 43, 0, 7, 3, 9)
plot(s1 ~ year, type = "b", main = "Population 1")
points(l1 ~ year, pch = 19, type = "b")
legend(2, 150, c("Small Fruit", "Large Fruit"), pch = c(1, 19))
# populaton 2
s2 <- c(16, 20, 18, 29, 30, 31, 34, 36, 30, 41, 38, 37)
l2 <- c(0, 2, 7, 0, 3, 0, 0, 1, 9, 0, 4, 2)
plot(s2 ~ year, type = "b", main = "Population 2")
points(l2 ~ year, pch = 19, type = "b")
legend(2, 40, c("Small Fruit", "Large Fruit"), pch = c(1, 19))
plot(s2 ~ year, ylim = c(0, 50), type = "b", main = "Population 2")
points(l2 ~ year, pch = 19, type = "b")
legend(2, 40, c("Small Fruit", "Large Fruit"), pch = c(1, 19))
plot(s2 ~ year, ylim = c(0, 50), type = "b", main = "Population 2")
points(l2 ~ year, pch = 19, type = "b")
legend(2, 50, c("Small Fruit", "Large Fruit"), pch = c(1, 19))
setwd("~/current_research/LEO_Analysis/lab_notebook")
weather <- read.table("./data/HSF_weather_2019-09-28.csv", header = T, sep = ",")
end.time <- as.POSIXct(2019-09-29 07:27:00)
end.time <- as.POSIXct("2019-09-29 07:27:00")
end.time
unique(weather$TIMESTAMP)
max(weather$TIMESTAMP)
max(as.POSIXct(weather$TIMESTAMP))
logger.time <- max(as.POSIXct(weather$TIMESTAMP))
logger.end.time <- max(as.POSIXct(weather$TIMESTAMP)) # this finds the last time rec
end.time <- as.POSIXct("2019-09-29 07:00:00") # this is the time from the file stamp that indicates when the file was created during the data download.
time.correction <- end.time - logger.end.time
time.correction <- as.POSIXct(end.time) - as.POSIXct(logger.end.time)
logger.end.time <- as.POSIXct(max(weather$TIMESTAMP)) # this finds the last time recorded by the logger, which should correspond to the time of the data download.
logger.end.time <- as.POSIXct(max(as.POSIXct(weather$TIMESTAMP)) # this finds the last time recorded by the logger, which should correspond to the time of the data download.
)
logger.end.time <- as.POSIXct(max(as.POSIXct(weather$TIMESTAMP))) # this finds the last time recorded by the logger, which should correspond to the time of the data download.
str(logger.end.time)
time.correction <- end.time - logger.end.time
time.correction
logger.end.time + time.correction
TIMESTAMP.corr <- weather$TIMESTAMP + time.correction
TIMESTAMP.corr <- as.POSIXct(weather$TIMESTAMP) + time.correction
plot(airTC ~ TIMESTAMP.cor, data = weather)
plot(AirTC ~ TIMESTAMP.cor, data = weather)
plot(AirTC ~ TIMESTAMP.corr, data = weather)
plot(RH ~ TIMESTAMP.corr, data = weather)
plot(BP_mmHg ~ TIMESTAMP.corr, data = weather)
plot(SlrkW) ~ TIMESTAMP.corr, data = weather)
plot(SlrkW ~ TIMESTAMP.corr, data = weather)
plot(SlrkW ~ TIMESTAMP.corr, data = weather, type = "l")
plot(WS_ms ~ TIMESTAMP.corr, data = weather, type = "l")
plot(Rain_mm_Tot ~ TIMESTAMP.corr, data = weather, type = "l")
plot(WindDir ~ TIMESTAMP.corr, data = weather, type = "l")
hist(weather$WindDir)
str(TIMESTAMP.corr)
weather.corr <- data.frame(weather, TIMESTAMP.corr)
plot(weather$TIMESTAMP, TIMESTAMP.corr)
plot(as.POSIXct(weather$TIMESTAMP), TIMESTAMP.corr)
weather.corr <- data.frame(weather, TIMESTAMP.corr)
write.table(weather.corr, "./data/HSF_Weather_2019-09-28.csv", quote = F, row.names = F, sep = ",")
write.table(weather.corr, "./data/HSF_weather_2019-09-28.csv", quote = F, row.names = F, sep = ",")
plot(SlrkW ~ TIMESTAMP.corr, data = weather, type = "l")
plot(SlrkW ~ TIMESTAMP.corr, data = weather, subset = TIMESTAMP.corr < "2019-09-11 00:00:00", type = "l")
plot(SlrkW ~ TIMESTAMP.corr, data = weather, subset = TIMESTAMP.corr < "2019-09-12 00:00:00", type = "l")
plot(SlrkW ~ TIMESTAMP.corr, data = weather, subset = TIMESTAMP.corr < "2019-09-13 00:00:00", type = "l")
plot(SlrkW ~ TIMESTAMP.corr, data = weather, subset = TIMESTAMP.corr < "2019-09-14 00:00:00", type = "l")
plot(SlrkW_Avg ~ TIMESTAMP.corr, data = weather, subset = TIMESTAMP.corr < "2019-09-14 00:00:00", type = "l")
plot(SlrMJ_Tot ~ TIMESTAMP.corr, data = weather, subset = TIMESTAMP.corr < "2019-09-14 00:00:00", type = "l")
plot(WindDir ~ TIMESTAMP.corr, data = weather, subset = TIMESTAMP.corr < "2019-09-14 00:00:00", type = "l")
plot(WS_ms_Avg ~ TIMESTAMP.corr, data = weather, subset = TIMESTAMP.corr < "2019-09-14 00:00:00", type = "l")
plot(BP ~ TIMESTAMP.corr, data = weather, subset = TIMESTAMP.corr < "2019-09-14 00:00:00", type = "l")
plot(BP_mmHg ~ TIMESTAMP.corr, data = weather, subset = TIMESTAMP.corr < "2019-09-14 00:00:00", type = "l")
